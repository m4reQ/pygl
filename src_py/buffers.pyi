import typing as t

TSupportsBufferProto = t.TypeVar('TSupportsBufferProto')

class Buffer:
    def __init__(self, size: int) -> None: ...

    @property
    def current_offset(self) -> int: ...

    @property
    def id(self) -> int: ...

    @property
    def size(self) -> int: ...

    def delete(self) -> None: ...
    def store(self, data: TSupportsBufferProto) -> None: ...
    def transfer(self) -> None: ...
    def reset_offset(self) -> None: ...

class MappedBuffer:
    def __init__(self,
                 size: int,
                 readable: bool = False,
                 writable: bool = False,
                 persistent: bool = False) -> None: ...

    @property
    def current_offset(self) -> int: ...

    @property
    def id(self) -> int: ...

    @property
    def size(self) -> int: ...

    def delete(self) -> None: ...
    def store(self, data: TSupportsBufferProto) -> None: ...
    def map(self, offset: int, size: int) -> None: ...
    def unmap(self) -> None: ...
    def reset_offset(self) -> None: ...
