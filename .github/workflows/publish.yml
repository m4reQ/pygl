name: Publish

on:
  push:
    branches: ['ci-setup']

env:
  PYGL_BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, ubuntu-latest ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyyaml packaging

      - name: Configure and build cmake (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: threeal/cmake-action@v2.0.0
        with:
          build-dir: build/cmake/${{ env.PYGL_BUILD_TYPE }}
          options: |
            CMAKE_BUILD_TYPE=$PYGL_BUILD_TYPE
            CMAKE_VERBOSE_MAKEFILE=ON
          build-args: --config ${{ env.PYGL_BUILD_TYPE }}

      - name: Configure and build cmake (Windows)
        if: matrix.os == 'windows-latest'
        uses: threeal/cmake-action@v2.0.0
        with:
          build-dir: build/cmake
          options: |
            CMAKE_BUILD_TYPE=$PYGL_BUILD_TYPE
            CMAKE_VERBOSE_MAKEFILE=ON
          build-args: --config ${{ env.PYGL_BUILD_TYPE }}

      - name: Create wheel
        id: wheel
        run: |
          echo "WHL_FILEPATH=$(python -m easywheel -B build/cmake)" >> $env:GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ github.sha }}
          path: ${{ steps.wheel.outputs.WHL_FILEPATH }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts


