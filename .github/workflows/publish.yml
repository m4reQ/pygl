name: Publish

on:
  push:
    branches: ['ci-setup']

env:
  PYGL_BUILD_TYPE: Release
  PYGL_CMAKE_DIR: "./build/cmake"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Setup environment (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        shell: pwsh
        run: |
          echo "PYGL_CMAKE_DIR=./build/cmake/${{ env.PYGL_BUILD_TYPE }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyyaml packaging

      - name: Configure and build cmake
        uses: threeal/cmake-action@v2.0.0
        with:
          build-dir: ${{ env.PYGL_CMAKE_DIR }}
          options: |
            CMAKE_BUILD_TYPE=${{ env.PYGL_BUILD_TYPE }}
            CMAKE_VERBOSE_MAKEFILE=ON
          build-args: --config ${{ env.PYGL_BUILD_TYPE }}

      - name: Create wheel
        id: wheel
        shell: pwsh
        env:
          whlInfo: ""
        run: |
          echo "whlInfo=$((python -m easywheel -B ${{ env.PYGL_CMAKE_DIR }}) | ConvertFrom-Json)" >> $GITHUB_ENV
          echo "WHL_FILEPATH=${{ env.whlInfo.whl_filepath }}" >> $env:GITHUB_OUTPUT
          echo "WHL_FILENAME=${{ env.whlInfo.whl_filename }}" >> $env:GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.wheel.outputs.WHL_FILENAME }}
          path: ${{ steps.wheel.outputs.WHL_FILEPATH }}

  # publish:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: ./dist


