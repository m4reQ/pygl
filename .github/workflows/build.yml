name: Build

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      python-version:
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ inputs.platform }}

    outputs:
      whl-filename: ${{ steps.wheel.outputs.whl-filename }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Set up environment
        shell: pwsh
        run: |
          echo "PYGL_BUILD_TYPE=Release" >> $env:GITHUB_ENV

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyyaml packaging

      - name: Configure and build cmake
        uses: threeal/cmake-action@v2.0.0
        with:
          build-dir: "build/cmake/Release"
          options: |
            CMAKE_BUILD_TYPE=Release
            CMAKE_VERBOSE_MAKEFILE=ON
          build-args: --config Release

      - name: Create wheel
        id: wheel
        shell: pwsh
        run: |
          echo "whl-filename=$(python -m easywheel -B build)" >> $env:GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.wheel.outputs.whl-filename }}
          path: "./build/${{ steps.wheel.outputs.whl-filename }}"

  test:
    if: inputs.platform == 'windows-latest'
    runs-on: self-hosted
    needs: build

    steps:
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pyglm numpy glfw

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.whl-filename }}

      - name: Run tests
        shell: pwsh
        run: |
          pytest -v ./tests
